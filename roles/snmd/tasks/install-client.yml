---
- import_tasks: install-client-pkgs.yml


- name: Install Sudo
  yum: name=sudo
  when: minio_user != 'root'


- name: Fix ownership for /home/{{ minio_user }}
  file: path=/home/{{ minio_user }}/.ansible/tmp state=directory mode=0700 owner={{ minio_user }} group={{ minio_user }}


- name: Add MinIO Server to Client Config
  become: yes
  become_user: "{{ minio_user }}"
  command: "/usr/local/bin/mcli --insecure alias set minio https://{{ ansible_host | default('localhost') }}:{{ minio_port }} {{ _minio.access_key }} {{ _minio.secret_key }}"
  args:
    creates: "{{ minio_client_config }}"
  # command: "{{ minio_client_bin }} --insecure alias set minio https://{{ ansible_host | default('localhost') }}:{{ minio_port }} {{ _minio.access_key }} {{ _minio.secret_key }}"


- block:
    - name: Create MinIO Admin Service
      copy:
        content: |
          [Unit]
          Description=Check minio {{ minio_service }} heal
          [Service]
          WorkingDirectory={{ minio_user_home }}
          User={{ minio_user }}
          Type=oneshot
          ExecStart={{ minio_client_bin }} admin heal -r minio
        dest: /usr/lib/systemd/system/{{ minio_service }}-check.service
      notify: systemd daemon-reload

    - name: Create Timer for MinIO Admin Service
      copy:
        content: |
          [Unit]
          Description=Run minio {{ minio_service }} heal check
          [Timer]
          OnCalendar={{ minio_check_calendar | d('weekly') }}
        dest: /usr/lib/systemd/system/{{ minio_service }}-check.timer

    - name: Start MinIo Admin Service Timer
      systemd: name={{ minio_service }}-check.timer state=started enabled=yes daemon_reload=yes

    - name: Check Cluster Status
      become: yes
      become_user: "{{ minio_user }}"
      command: "{{ minio_client_bin }} admin info minio --json"
      changed_when: no
      register: info
      until: "(info.stdout_lines | map('from_json') | map(attribute='storage.backend.offlineDisks') | sum) == 0"
      retries: 5
      delay: 10
  when:
    - minio_client_admin_host in [ansible_default_ipv4.address, 'localhost', ansible_hostname, ansible_nodename, ansible_host]

