global
	log 127.0.0.1 local0 info
	maxconn {{ _haproxy.global_max_connections }}
	user {{ _haproxy.user }}
	group {{ _haproxy.group }}
	daemon
	# nbproc 1
	# chroot /usr/local/haproxy
	# pidfile /var/run/haproxy.pid

defaults
	log global
	mode tcp
	option tcplog
	option dontlognull
	option redispatch
	retries 3
	maxconn {{ _haproxy.defaults_max_connections }}
	timeout connect 10s
	timeout client 60s
	timeout server 60s


listen  admin-stats
	mode http
	option httplog
	bind *:{{ _haproxy.stats_port }}
	stats enable
	stats refresh 30s
	stats uri /haproxy?stats
        stats realm MinIO HAProxy\ Statistics  # Title Text for PopUp Window
        stats show-node
        stats show-legends
        stats show-desc MinIO Load Balancer Stats ( Master )
	stats auth {{ _haproxy.stats_user }}:{{ _haproxy.stats_pass }}


# DEV MinIO API Load Balancer
#Requests are distributed to the backends by using roundrobin algorthym. 
#HAProxy listens to the 9000 port of minio backend nodes.
listen minio-api
    mode http
    balance leastconn
    bind *:9000
#if "200 OK" received from backend, HAProxy determines that the backend is healthy
    option httpchk GET /minio/health/live HTTP/1.1
    http-check send hdr Host myminio
    http-check expect status 200
    default-server inter 3s fall 2 rise 2 on-marked-down shutdown-sessions
{% for h in groups['workers'] %}
    server {{ h }} {{ hostvars[h][_netdev]['ipv4']['address'] }}:9000 check maxconn 1000
{% endfor %}


# MinIO Console Load Balancer
# This is for load balancing the web console. It is bind to virtual_ip:9001
listen minio-console
    mode http
    balance leastconn
    bind *:9001
    option httpchk GET /minio/health/ready
    http-check expect status 200
    default-server inter 3s fall 2 rise 2 on-marked-down shutdown-sessions
{% for h in groups['workers'] %}
        server {{ h }} {{ hostvars[h][_netdev]['ipv4']['address'] }}:9001 check maxconn 1000
{% endfor %}


# References
# - https://www.configland.com/index.php?option=com_content&view=article&layout=edit&id=324

