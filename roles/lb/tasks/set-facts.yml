---
#- name: Show interface names except loopback
#  debug:
#    msg: "{{ ansible_interfaces | difference(['lo','lo:1','lo:2']) }}"
# - meta: end_play


- name: Get Network Interface name From Prefix of IP Addresses Provided
  set_fact:
    netdev0: "{{ ansible_interfaces | difference(['lo','lo_1','lo_2']) | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _minio.net.ipaddr0 ) | map(attribute='device') | first }}"
    netdev1: "{{ ansible_interfaces | difference(['lo','lo_1','lo_2']) | map('regex_replace', '^', 'ansible_') | map('extract', vars) | selectattr('ipv4', 'defined') | selectattr('ipv4.address', 'match', _minio.net.ipaddr1 ) | map(attribute='device') | first }}"


- name: Get IP Address from Provided Network Device Name
  set_fact:
    ipaddr0: "{{ hostvars[inventory_hostname]['ansible_'~netdev0].ipv4.address }}"
    ipaddr1: "{{ hostvars[inventory_hostname]['ansible_'~netdev1].ipv4.address }}"


- debug: msg={{ netdev0 }}
- debug: msg={{ netdev1 }}
- debug: msg={{ ipaddr0 }}
- debug: msg={{ ipaddr1 }}


- name: Define Facts For All Hostname
  set_fact:
    all_ext_hostnames: "{{ groups['all'] | map('extract', hostvars, ['ansible_hostname']) | join(' ') }}"
- debug: msg={{ all_ext_hostnames }}


- name: Define Fact For All Hosts of First IP Addresses
  set_fact:
    all_net0_ipaddrs: "{{ groups['all'] | map('extract', hostvars, ['ansible_'~netdev0, 'ipv4', 'address']) | join(',') }}"
- debug: msg={{ all_net0_ipaddrs }}


- name: Set Default Network Device and Address
  set_fact:
    _netdev: "{{ 'ansible_'~ netdev1 }}"
    _ipaddr: "{{ ipaddr1 }}"


- name: Define Fact of Network Address
  set_fact:
    minio_network_range: "{{ hostvars[inventory_hostname][_netdev]['ipv4']['network'] }}/{{ ( hostvars[inventory_hostname][_netdev]['ipv4']['address'] + '/' + hostvars[inventory_hostname][_netdev]['ipv4']['netmask'] ) | ansible.utils.ipaddr('prefix') }}"
    certgen_version: "{{ _certgen.major_version }}.{{ _certgen.minor_version }}.{{ _certgen.patch_version }}"
    certgen_file_name: "certgen-{{ _certgen.os }}-{{ _certgen.arch }}"


- name: Define Fact of Specific IP Address Range
  set_fact:
    minio_ip_addr_range: "{{ item }}"
  with_items: "{{ ansible_all_ipv4_addresses }}"
  when: "item | ansible.utils.ipaddr( minio_network_range )"


- name: Define Fact of HAProxy Check Script Name
  set_fact:
    _check_script_name: "haproxy_check_script"


- name: Define Fact of HAProxy Check Script Name
  set_fact:
    _check_script_name: "haproxy_check_script"
  when: ( ha is defined and ha == true ) or ( haproxy is defined and haproxy == true ) or ( lb_all is defined and lb_all == true )


- name: Define Fact of NGINX Check Script Name
  set_fact:
    _check_script_name: "nginx_check_script"
  when: ( nginx is defined and nginx == true )


# - debug: msg="{{ ( _keepalived.shared_ips | selectattr('fe', 'equalto', 'minio-service') | list | first)['ipaddr'] }}"
# - debug: msg="{{ ( _keepalived.shared_ips | selectattr('fe', 'equalto', 'minio-console') | list | first)['ipaddr'] }}"
# - debug: msg="{{ ( _keepalived.shared_ips | selectattr('fe', 'equalto', 'minio-service') | list | first)['ipaddr'] | split('/') | first | }}"
# - debug: msg="{{ ( _keepalived.shared_ips | selectattr('fe', 'equalto', 'minio-console') | list | first)['ipaddr'] | split('/') | first | }}"
# - debug: msg="{{ item.ipaddr.split('/')[:-1] | join('/') }}"
#  loop: "{{ _keepalived.shared_ips }}"

