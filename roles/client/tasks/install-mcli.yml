---
- name: Check if MinIO Client Binary Already Exists
  stat: path={{ _mcli.bin }}
  register: check_mcli_bin


- name: Copy MinIO Client Binary from Local Directory
  copy: src={{ mcli_pkg_name }} dest=/tmp/{{ mcli_pkg_name }} mode=0644 owner=root group=root
  register: mc_local_copy
  when: check_mcli_bin.stat.exists == false and _mcli.download == false


- name: Download MinIO Client Package
  get_url:
    url: "{{ _mcli.download_archive_url }}/{{ mcli_pkg_name }}"
    dest: "/tmp/{{ mcli_pkg_name }}"
    mode: 0644
    checksum: "{{ _mcli.checksum | d(omit) }}"
  when: ( _mcli.download_archive_url.endswith('mcli') or ( _mcli.download_archive_url + '/' + mcli_pkg_name ).endswith('rpm') ) and ( check_mcli_bin.stat.exists == false and _mcli.download == true )


- name: Install MinIO Client Package from Local Directory
  package:
    name: /tmp/{{ mcli_pkg_name }}
    state: present
    disable_gpg_check: yes
  when: check_mcli_bin.stat.exists == false


- name: Set MinIO Service Alias
  shell: |
    {{ _mcli.bin }} alias set myminio {{ minio_endpoint_proto }}://{{ _mcli.config_opts.hosts.minio.url }} {{ _minio.access_key }} {{ _minio.secret_key }} --insecure
  register: set_minio_svc_alias
  args:
    creates: "{{ _mcli.config }}"
  when: inventory_hostname in groups['workers']
- debug: msg="{{ set_minio_svc_alias }}"
  when: inventory_hostname in groups['workers']


- name: Set MinIO Service Alias
  shell: |
    {{ _mcli.bin }} alias set myminio {{ nginx_endpoint_proto }}://{{ _nginx.minio.api.hostname }}.{{ _nginx.minio.api.domain }} {{ _minio.access_key }} {{ _minio.secret_key }} --insecure
  register: set_minio_svc_alias
  args:
    creates: "{{ _mcli.config }}"
  when: inventory_hostname not in groups['workers']
- debug: msg="{{ set_minio_svc_alias }}"
  when: inventory_hostname not in groups['workers']

